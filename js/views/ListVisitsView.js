// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(['underscore', 'backbone', 'hogan'], function(_, Backbone, Hogan) {
    var ListVisitsView;
    ListVisitsView = (function(_super) {

      __extends(ListVisitsView, _super);

      function ListVisitsView() {
        this.render = __bind(this.render, this);
        return ListVisitsView.__super__.constructor.apply(this, arguments);
      }

      ListVisitsView.prototype.initialize = function() {
        return this.render(this.collection);
      };

      ListVisitsView.prototype.render = function() {
        var visit, _i, _len, _ref, _results,
          _this = this;
        console.log("render");
        _ref = this.collection.models;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          visit = _ref[_i];
          _results.push((function(visit) {
            var visitRendered;
            console.log(visit);
            visitRendered = $(_this.options.template.render(visit.toJSON()));
            return _this.$el.append(visitRendered);
          })(visit));
        }
        return _results;
      };

      return ListVisitsView;

    })(Backbone.View);
    return ListVisitsView;
  });

}).call(this);
